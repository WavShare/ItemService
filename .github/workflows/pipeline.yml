name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  build_test_analyze_and_push:
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build and test application
        env:
          SERVER_PORT: ${{ secrets.SERVER_PORT }}
          MONGO_HOST: ${{ secrets.MONGO_HOST }}
          MONGO_PORT: ${{ secrets.MONGO_PORT }}
          MONGO_USERNAME: ${{ secrets.MONGO_USERNAME }}
          MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}
          MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }}
        run: mvn install

      - name: SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.host.url="https://sonarcloud.io" -Dsonar.projectKey=WavShare_ItemService

      - name: Docker login
        if: success() && github.ref == 'refs/heads/main'
        uses: azure/docker-login@v1
        with:
          login-server: '${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io'
          username: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
          password: ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }}

      - name: ACR build
        if: success() && github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: '${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ secrets.AZURE_REPOSITORY }}/${{ secrets.AZURE_REPOSITORY }}:${{ github.sha }}'

      - name: Azure login
        if: success() && github.ref == 'refs/heads/main'
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        if: success() && github.ref == 'refs/heads/main'
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AZURE_CLUSTER_NAME }}

      - name: Setup kubectl
        if: success() && github.ref == 'refs/heads/main'
        uses: azure/setup-kubectl@v3

      - name: Deploy to AKS
        if: success() && github.ref == 'refs/heads/main'
        uses: Azure/k8s-deploy@v5
        with:
          action: 'deploy'
          manifests: |
            k8s/deployment.yaml
          strategy: 'basic'
          images: '${{ secrets.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ secrets.AZURE_REPOSITORY }}/${{ secrets.AZURE_REPOSITORY }}:${{ github.sha }}'
          pull-images: false
          namespace: 'development'